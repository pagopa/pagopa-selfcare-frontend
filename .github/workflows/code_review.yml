name: Code Review

# Controls when the workflow will run
on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  PROJECT_KEY: pagopa_pagopa-selfcare-frontend

permissions:
  id-token: write
  contents: read
  deployments: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16.10.0

      - name: Build
        run: |
          yarn install
          yarn generate
          yarn build

      - name: Build And Deploy
        id: build_deploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: 'upload'
          app_location: "build" # App source code path relative to repository root
          skip_app_build: true
          skip_api_build: true

  static_analysis:
    name: Static Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16.10.0

      - name: Lint
        run: |
          yarn install
          yarn lint

  test:
    name: Unit Test & Sonar
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16.10.0

      - name: Unit Tests
        run: |
          yarn install
          yarn generate
          yarn test:coverage --watchAll=false

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
            args: >
              -Dsonar.coverage.exclusions=**/utils/**,**/__mocks__/**,**/__tests__/**,**/api/**
