{
  "openapi": "3.0.3",
  "info": {
    "title": "pagopa-selfcare-ms-backoffice",
    "description": "PagoPa backoffice API documentation",
    "version": "0.0.84"
  },
  "servers": [
    {
      "url": "http://localhost:80",
      "description": "Inferred Url"
    }
  ],
  "tags": [
    {
      "name": "channels",
      "description": "Api config channels operations"
    },
    {
      "name": "institution",
      "description": "Institution operations"
    },
    {
      "name": "stations",
      "description": "Api config stations operations"
    }
  ],
  "paths": {
    "/channels": {
      "get": {
        "tags": ["channels"],
        "summary": "getChannels",
        "description": "Get paginated list of channels",
        "operationId": "getChannelsUsingGET",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of elements on one page. Default = 50",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number. Page value starts from 0",
            "required": true,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "code",
            "in": "query",
            "description": "Filter chennel by code",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Sort Direction ordering",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelsResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": ["global"]
          }
        ]
      },
      "post": {
        "tags": ["channels"],
        "summary": "createChannel",
        "description": "Create a channel",
        "operationId": "createChannelUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChannelDetailsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelDetailsResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": ["global"]
          }
        ]
      }
    },
    "/channels/brokerspsp": {
      "post": {
        "tags": ["channels"],
        "summary": "createBrokerPsp",
        "description": "Create a PSP broker",
        "operationId": "createBrokerPspUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrokerPspDetailsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrokerPspDetailsResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": ["global"]
          }
        ]
      }
    },
    "/channels/configuration/paymenttypes": {
      "get": {
        "tags": ["channels"],
        "summary": "getPaymentTypes",
        "description": "Get list of payment type",
        "operationId": "getPaymentTypesUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentTypesResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": ["global"]
          }
        ]
      }
    },
    "/channels/csv": {
      "get": {
        "tags": ["channels"],
        "summary": "getChannelsCSV",
        "description": "Download the list of channelss as CSV file",
        "operationId": "getChannelsCSVUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Resource"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Resource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": ["global"]
          }
        ]
      }
    },
    "/channels/details/{channelcode}": {
      "get": {
        "tags": ["channels"],
        "summary": "getChannelDetails",
        "operationId": "getChannelDetailsUsingGET",
        "parameters": [
          {
            "name": "channelcode",
            "in": "path",
            "description": "Code of the payment channel",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelDetailsResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": ["global"]
          }
        ]
      }
    },
    "/channels/paymenttypes/{channelcode}": {
      "get": {
        "tags": ["channels"],
        "summary": "getChannelPaymentTypes",
        "description": "Get list of payment type of a channel",
        "operationId": "getChannelPaymentTypesUsingGET",
        "parameters": [
          {
            "name": "channelcode",
            "in": "path",
            "description": "Channel's unique identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PspChannelPaymentTypesResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": ["global"]
          }
        ]
      }
    },
    "/channels/psp": {
      "post": {
        "tags": ["channels"],
        "summary": "createPaymentServiceProvider",
        "description": "Create a payment service provider",
        "operationId": "createPaymentServiceProviderUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentServiceProviderDetailsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentServiceProviderDetailsResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": ["global"]
          }
        ]
      }
    },
    "/channels/psp/{channelcode}/{pspcode}": {
      "put": {
        "tags": ["channels"],
        "summary": "updatePaymentServiceProvidersChannels",
        "description": "Update a relation between a PSP and a channel",
        "operationId": "updatePaymentServiceProvidersChannelsUsingPUT",
        "parameters": [
          {
            "name": "channelcode",
            "in": "path",
            "description": "Channel's unique identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pspcode",
            "in": "path",
            "description": "Code of the payment service provider",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PspChannelPaymentTypes"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PspChannelPaymentTypesResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": ["global"]
          }
        ]
      },
      "delete": {
        "tags": ["channels"],
        "summary": "deletePaymentServiceProvidersChannels",
        "description": "Delete a relation between a PSP and a channel",
        "operationId": "deletePaymentServiceProvidersChannelsUsingDELETE",
        "parameters": [
          {
            "name": "channelcode",
            "in": "path",
            "description": "Channel's unique identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pspcode",
            "in": "path",
            "description": "Code of the payment service provider",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": ["global"]
          }
        ]
      }
    },
    "/channels/pspdirect": {
      "post": {
        "tags": ["channels"],
        "summary": "createPSPDirect",
        "description": "Create a payment service provider",
        "operationId": "createPSPDirectUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentServiceProviderDetailsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentServiceProviderDetailsResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": ["global"]
          }
        ]
      }
    },
    "/channels/{brokerpspcode}/paymentserviceproviders": {
      "get": {
        "tags": ["channels"],
        "summary": "getPspBrokerPsp",
        "description": "Get the PSP list of a broker",
        "operationId": "getPspBrokerPspUsingGET",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of elements on one page. Default = 50",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number. Page value starts from 0",
            "required": true,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "brokerpspcode",
            "in": "path",
            "description": "Broker code of a PSP",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentServiceProvidersResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": ["global"]
          }
        ]
      }
    },
    "/channels/{channelcode}": {
      "put": {
        "tags": ["channels"],
        "summary": "updateChannel",
        "description": "Create a channel",
        "operationId": "updateChannelUsingPUT",
        "parameters": [
          {
            "name": "channelcode",
            "in": "path",
            "description": "Channel's unique identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChannelDetailsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelDetailsResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": ["global"]
          }
        ]
      },
      "delete": {
        "tags": ["channels"],
        "summary": "deleteChannel",
        "description": "delete channel",
        "operationId": "deleteChannelUsingDELETE",
        "parameters": [
          {
            "name": "channelcode",
            "in": "path",
            "description": "Code of the payment channel",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": ["global"]
          }
        ]
      }
    },
    "/channels/{channelcode}/paymenttypes": {
      "post": {
        "tags": ["channels"],
        "summary": "createChannelPaymentType",
        "description": "Create a payment types of a channel",
        "operationId": "createChannelPaymentTypeUsingPOST",
        "parameters": [
          {
            "name": "channelcode",
            "in": "path",
            "description": "Channel's unique identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PspChannelPaymentTypes"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PspChannelPaymentTypesResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": ["global"]
          }
        ]
      }
    },
    "/channels/{channelcode}/psp": {
      "get": {
        "tags": ["channels"],
        "summary": "getChannelPaymentServiceProviders",
        "description": "Get paginated list of PSPs associated with the channel",
        "operationId": "getChannelPaymentServiceProvidersUsingGET",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of elements on one page. Default = 50",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number. Page value starts from 0",
            "required": true,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "channelcode",
            "in": "path",
            "description": "Code of the payment channel",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelPspListResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": ["global"]
          }
        ]
      }
    },
    "/channels/{channelcode}/{paymenttypecode}": {
      "delete": {
        "tags": ["channels"],
        "summary": "deleteChannelPaymentType",
        "description": "delete payment type of a channel",
        "operationId": "deleteChannelPaymentTypeUsingDELETE",
        "parameters": [
          {
            "name": "channelcode",
            "in": "path",
            "description": "Channel's unique identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymenttypecode",
            "in": "path",
            "description": "Code of the payment type",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": ["global"]
          }
        ]
      }
    },
    "/channels/{pspcode}": {
      "get": {
        "tags": ["channels"],
        "summary": "getPspChannels",
        "operationId": "getPspChannelsUsingGET",
        "parameters": [
          {
            "name": "pspcode",
            "in": "path",
            "description": "Code of the payment service provider",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PspChannelsResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": ["global"]
          }
        ]
      }
    },
    "/channels/{pspcode}/generate": {
      "get": {
        "tags": ["channels"],
        "summary": "getChannelCode",
        "description": "Generate new channel Code",
        "operationId": "getChannelCodeUsingGET",
        "parameters": [
          {
            "name": "pspcode",
            "in": "path",
            "description": "Code of the payment service provider",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": ["global"]
          }
        ]
      }
    },
    "/institutions": {
      "get": {
        "tags": ["institution"],
        "summary": "getInstitutions",
        "description": "Retrieves all the onboarded institutions related to the logged user",
        "operationId": "getInstitutionsUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InstitutionResource"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": ["global"]
          }
        ]
      }
    },
    "/institutions/{institutionId}": {
      "get": {
        "tags": ["institution"],
        "summary": "getInstitution",
        "description": "Retrieves an institution's details",
        "operationId": "getInstitutionUsingGET",
        "parameters": [
          {
            "name": "institutionId",
            "in": "path",
            "description": "Institution's unique internal identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstitutionDetailResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": ["global"]
          }
        ]
      }
    },
    "/institutions/{institutionId}/api-keys": {
      "get": {
        "tags": ["institution"],
        "summary": "getInstitutionApiKeys",
        "description": "Retrieve an institution's primary and secondary keys",
        "operationId": "getInstitutionApiKeysUsingGET",
        "parameters": [
          {
            "name": "institutionId",
            "in": "path",
            "description": "Institution's unique internal identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiKeysResource"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": ["global"]
          }
        ]
      },
      "post": {
        "tags": ["institution"],
        "summary": "createInstitutionApiKeys",
        "description": "Creates a new subscription for a given Institution and returns its primary and secondary keys",
        "operationId": "createInstitutionApiKeysUsingPOST",
        "parameters": [
          {
            "name": "institutionId",
            "in": "path",
            "description": "Institution's unique internal identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriptionCode",
            "in": "query",
            "description": "subscription's unique internal identifier",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiKeysResource"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": ["global"]
          }
        ]
      }
    },
    "/institutions/{institutionId}/products": {
      "get": {
        "tags": ["institution"],
        "summary": "getInstitutionProducts",
        "description": "retrieve all active products for given institution and logged user",
        "operationId": "getInstitutionProductsUsingGET",
        "parameters": [
          {
            "name": "institutionId",
            "in": "path",
            "description": "Institution's unique internal identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductsResource"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": ["global"]
          }
        ]
      }
    },
    "/institutions/{subscriptionid}/api-keys/primary/regenerate": {
      "post": {
        "tags": ["institution"],
        "summary": "regeneratePrimaryKey",
        "description": "Regenerates the subscription's primary key",
        "operationId": "regeneratePrimaryKeyUsingPOST",
        "parameters": [
          {
            "name": "subscriptionid",
            "in": "path",
            "description": "Institution's subscription id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": ["global"]
          }
        ]
      }
    },
    "/institutions/{subscriptionid}/api-keys/secondary/regenerate": {
      "post": {
        "tags": ["institution"],
        "summary": "regenerateSecondaryKey",
        "description": "Regenerates the subscription's secondary key",
        "operationId": "regenerateSecondaryKeyUsingPOST",
        "parameters": [
          {
            "name": "subscriptionid",
            "in": "path",
            "description": "Institution's subscription id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": ["global"]
          }
        ]
      }
    },
    "/stations": {
      "get": {
        "tags": ["stations"],
        "summary": "getStations",
        "description": "Get paginated list of stations",
        "operationId": "getStationsUsingGET",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of elements on one page. Default = 50",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number. Page value starts from 0",
            "required": true,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "stationCode",
            "in": "query",
            "description": "Station's unique identifier",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "creditorInstitutionCode",
            "in": "query",
            "description": "Creditor institution associated to given station",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Sort Direction ordering",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StationsResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": ["global"]
          }
        ]
      },
      "post": {
        "tags": ["stations"],
        "summary": "createStation",
        "description": "Create new station",
        "operationId": "createStationUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StationDetailsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StationDetailResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": ["global"]
          }
        ]
      }
    },
    "/stations/details/{stationId}": {
      "get": {
        "tags": ["stations"],
        "summary": "getStation",
        "description": "Get station's details",
        "operationId": "getStationUsingGET",
        "parameters": [
          {
            "name": "stationId",
            "in": "path",
            "description": "Station's unique identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StationDetailResource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": ["global"]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ApiKeysResource": {
        "title": "ApiKeysResource",
        "required": ["displayName", "id", "primaryKey", "secondaryKey"],
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Institution's name Api Key"
          },
          "id": {
            "type": "string",
            "description": "Institution's subscription id"
          },
          "primaryKey": {
            "type": "string",
            "description": "Institution's primary Api Key"
          },
          "secondaryKey": {
            "type": "string",
            "description": "Institution's secondary Api Key"
          }
        }
      },
      "AssistanceContactsResource": {
        "title": "AssistanceContactsResource",
        "type": "object",
        "properties": {
          "supportEmail": {
            "type": "string",
            "description": "Institution's support email contact"
          },
          "supportPhone": {
            "type": "string",
            "description": "Institution's support phone contact"
          }
        }
      },
      "AttributeResource": {
        "title": "AttributeResource",
        "required": ["code", "description", "origin"],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Institution's code"
          },
          "description": {
            "type": "string",
            "description": "Institution's name"
          },
          "origin": {
            "type": "string",
            "description": "Institution data origin"
          }
        }
      },
      "BrokerPspDetailsDto": {
        "title": "BrokerPspDetailsDto",
        "type": "object",
        "properties": {
          "broker_psp_code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "extended_fault_bean": {
            "type": "boolean"
          }
        }
      },
      "BrokerPspDetailsResource": {
        "title": "BrokerPspDetailsResource",
        "type": "object",
        "properties": {
          "broker_psp_code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "extended_fault_bean": {
            "type": "boolean"
          }
        }
      },
      "ChannelDetailsDto": {
        "title": "ChannelDetailsDto",
        "type": "object",
        "properties": {
          "agid": {
            "type": "boolean",
            "description": "agid",
            "example": false
          },
          "broker_description": {
            "type": "string",
            "description": "Broker description. Read only field"
          },
          "broker_psp_code": {
            "type": "string",
            "description": "psp code "
          },
          "card_chart": {
            "type": "boolean",
            "description": "card chart",
            "example": false
          },
          "channel_code": {
            "type": "string",
            "description": "Channel code"
          },
          "digital_stamp_brand": {
            "type": "boolean",
            "description": "digital stamp brand",
            "example": false
          },
          "enabled": {
            "type": "boolean"
          },
          "flag_io": {
            "type": "boolean",
            "description": "flag io",
            "example": false
          },
          "ip": {
            "type": "string",
            "description": "channel's ip"
          },
          "new_fault_code": {
            "type": "boolean",
            "description": "new fault code",
            "example": false
          },
          "new_password": {
            "type": "string",
            "description": "channel's new password"
          },
          "npm_service": {
            "type": "string",
            "description": "npm service"
          },
          "on_us": {
            "type": "boolean",
            "description": "on us",
            "example": false
          },
          "password": {
            "type": "string",
            "description": "channel's password"
          },
          "payment_model": {
            "type": "string",
            "description": "payment model",
            "enum": ["ACTIVATED_AT_PSP", "DEFERRED", "IMMEDIATE", "IMMEDIATE_MULTIBENEFICIARY"]
          },
          "payment_types": {
            "type": "array",
            "description": "List of payment types",
            "items": {
              "type": "string"
            }
          },
          "port": {
            "type": "integer",
            "description": "channel's port",
            "format": "int64"
          },
          "primitive_version": {
            "type": "string",
            "description": "primitive version"
          },
          "protocol": {
            "type": "string",
            "description": "channel's protocol",
            "enum": ["HTTP", "HTTPS"]
          },
          "proxy_enabled": {
            "type": "boolean",
            "description": "proxy Enabled",
            "example": false
          },
          "proxy_host": {
            "type": "string",
            "description": "proxy Host"
          },
          "proxy_password": {
            "type": "string",
            "description": "proxy Password"
          },
          "proxy_port": {
            "type": "integer",
            "description": "proxy Port",
            "format": "int64"
          },
          "proxy_username": {
            "type": "string",
            "description": "proxy Username"
          },
          "recovery": {
            "type": "boolean",
            "description": "recovery",
            "example": false
          },
          "redirect_ip": {
            "type": "string",
            "description": "redirect ip"
          },
          "redirect_path": {
            "type": "string",
            "description": "redirect path"
          },
          "redirect_port": {
            "type": "integer",
            "description": "redirect port",
            "format": "int64"
          },
          "redirect_protocol": {
            "type": "string",
            "description": "redirect protocol",
            "enum": ["HTTP", "HTTPS"]
          },
          "redirect_query_string": {
            "type": "string",
            "description": "redirect query string"
          },
          "rt_push": {
            "type": "boolean",
            "description": "rt Push",
            "example": false
          },
          "serv_plugin": {
            "type": "string",
            "description": "service plugin"
          },
          "service": {
            "type": "string",
            "description": "channel's service"
          },
          "target_host": {
            "type": "string",
            "description": "target host"
          },
          "target_path": {
            "type": "string",
            "description": "target path's"
          },
          "target_port": {
            "type": "integer",
            "description": "target port",
            "format": "int64"
          },
          "thread_number": {
            "type": "integer",
            "description": "thread number",
            "format": "int64"
          },
          "timeout_a": {
            "type": "integer",
            "description": "timeout A",
            "format": "int64"
          },
          "timeout_b": {
            "type": "integer",
            "description": "timeout B",
            "format": "int64"
          },
          "timeout_c": {
            "type": "integer",
            "description": "timeout C",
            "format": "int64"
          }
        }
      },
      "ChannelDetailsResource": {
        "title": "ChannelDetailsResource",
        "type": "object",
        "properties": {
          "agid": {
            "type": "boolean",
            "description": "agid",
            "example": false
          },
          "broker_description": {
            "type": "string",
            "description": "Broker description. Read only field"
          },
          "broker_psp_code": {
            "type": "string",
            "description": "psp code "
          },
          "card_chart": {
            "type": "boolean",
            "description": "card chart",
            "example": false
          },
          "channel_code": {
            "type": "string",
            "description": "Channel code"
          },
          "digital_stamp_brand": {
            "type": "boolean",
            "description": "digital stamp brand",
            "example": false
          },
          "enabled": {
            "type": "boolean"
          },
          "flag_io": {
            "type": "boolean",
            "description": "flag io",
            "example": false
          },
          "ip": {
            "type": "string",
            "description": "channel's ip"
          },
          "new_fault_code": {
            "type": "boolean",
            "description": "new fault code",
            "example": false
          },
          "new_password": {
            "type": "string",
            "description": "channel's new password"
          },
          "npm_service": {
            "type": "string",
            "description": "npm service"
          },
          "on_us": {
            "type": "boolean",
            "description": "on us",
            "example": false
          },
          "password": {
            "type": "string",
            "description": "channel's password"
          },
          "payment_model": {
            "type": "string",
            "description": "payment model",
            "enum": ["ACTIVATED_AT_PSP", "DEFERRED", "IMMEDIATE", "IMMEDIATE_MULTIBENEFICIARY"]
          },
          "payment_types": {
            "type": "array",
            "description": "List of payment types",
            "items": {
              "type": "string"
            }
          },
          "port": {
            "type": "integer",
            "description": "channel's port",
            "format": "int64"
          },
          "primitive_version": {
            "type": "string",
            "description": "primitive version"
          },
          "protocol": {
            "type": "string",
            "description": "channel's protocol",
            "enum": ["HTTP", "HTTPS"]
          },
          "proxy_enabled": {
            "type": "boolean",
            "description": "proxy Enabled",
            "example": false
          },
          "proxy_host": {
            "type": "string",
            "description": "proxy Host"
          },
          "proxy_password": {
            "type": "string",
            "description": "proxy Password"
          },
          "proxy_port": {
            "type": "integer",
            "description": "proxy Port",
            "format": "int64"
          },
          "proxy_username": {
            "type": "string",
            "description": "proxy Username"
          },
          "recovery": {
            "type": "boolean",
            "description": "recovery",
            "example": false
          },
          "redirect_ip": {
            "type": "string",
            "description": "redirect ip"
          },
          "redirect_path": {
            "type": "string",
            "description": "redirect path"
          },
          "redirect_port": {
            "type": "integer",
            "description": "redirect port",
            "format": "int64"
          },
          "redirect_protocol": {
            "type": "string",
            "description": "redirect protocol",
            "enum": ["HTTP", "HTTPS"]
          },
          "redirect_query_string": {
            "type": "string",
            "description": "redirect query string"
          },
          "rt_push": {
            "type": "boolean",
            "description": "rt Push",
            "example": false
          },
          "serv_plugin": {
            "type": "string",
            "description": "service plugin"
          },
          "service": {
            "type": "string",
            "description": "channel's service"
          },
          "target_host": {
            "type": "string",
            "description": "target host"
          },
          "target_path": {
            "type": "string",
            "description": "target path's"
          },
          "target_port": {
            "type": "integer",
            "description": "target port",
            "format": "int64"
          },
          "thread_number": {
            "type": "integer",
            "description": "thread number",
            "format": "int64"
          },
          "timeout_a": {
            "type": "integer",
            "description": "timeout A",
            "format": "int64"
          },
          "timeout_b": {
            "type": "integer",
            "description": "timeout B",
            "format": "int64"
          },
          "timeout_c": {
            "type": "integer",
            "description": "timeout C",
            "format": "int64"
          }
        }
      },
      "ChannelPspListResource": {
        "title": "ChannelPspListResource",
        "type": "object",
        "properties": {
          "page_info": {
            "description": "info pageable",
            "$ref": "#/components/schemas/PageInfo"
          },
          "payment_service_providers": {
            "type": "array",
            "description": "enabled",
            "items": {
              "$ref": "#/components/schemas/ChannelPspResource"
            }
          }
        }
      },
      "ChannelPspResource": {
        "title": "ChannelPspResource",
        "type": "object",
        "properties": {
          "business_name": {
            "type": "string",
            "description": "business name of the payment service provider"
          },
          "enabled": {
            "type": "boolean",
            "description": "enabled",
            "example": false
          },
          "payment_types": {
            "type": "array",
            "description": "List of payment types",
            "items": {
              "type": "string"
            }
          },
          "psp_code": {
            "type": "string",
            "description": "Code of the payment service provider"
          }
        }
      },
      "ChannelResource": {
        "title": "ChannelResource",
        "type": "object",
        "properties": {
          "broker_description": {
            "type": "string",
            "description": "Broker description. Read only field"
          },
          "channel_code": {
            "type": "string",
            "description": "Channel code"
          },
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "ChannelsResource": {
        "title": "ChannelsResource",
        "required": ["channels", "page_info"],
        "type": "object",
        "properties": {
          "channels": {
            "type": "array",
            "description": "list of psp and ec channels",
            "items": {
              "$ref": "#/components/schemas/ChannelResource"
            }
          },
          "page_info": {
            "description": "info pageable",
            "$ref": "#/components/schemas/PageInfo"
          }
        }
      },
      "CompanyInformationsResource": {
        "title": "CompanyInformationsResource",
        "type": "object",
        "properties": {
          "businessRegisterPlace": {
            "type": "string",
            "description": "Institution's business register place"
          },
          "rea": {
            "type": "string",
            "description": "Institution's REA"
          },
          "shareCapital": {
            "type": "string",
            "description": "Institution's share capital value"
          }
        }
      },
      "DpoDataResource": {
        "title": "DpoDataResource",
        "required": ["address", "email", "pec"],
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "DPO's address"
          },
          "email": {
            "type": "string",
            "description": "DPO's email"
          },
          "pec": {
            "type": "string",
            "description": "DPO's PEC"
          }
        }
      },
      "InputStream": {
        "title": "InputStream",
        "type": "object"
      },
      "InstitutionDetailResource": {
        "title": "InstitutionDetailResource",
        "required": [
          "address",
          "attributes",
          "description",
          "digitalAddress",
          "externalId",
          "id",
          "institutionType",
          "origin",
          "originId",
          "taxCode",
          "zipCode"
        ],
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "Institution's physical address"
          },
          "attributes": {
            "type": "array",
            "description": "Institution's attributes",
            "items": {
              "$ref": "#/components/schemas/AttributeResource"
            }
          },
          "description": {
            "type": "string",
            "description": "Institution's name"
          },
          "digitalAddress": {
            "type": "string",
            "description": "Institution's digitalAddress"
          },
          "externalId": {
            "type": "string",
            "description": "Institution's unique external identifier"
          },
          "id": {
            "type": "string",
            "description": "Institution's unique internal identifier"
          },
          "institutionType": {
            "type": "string",
            "description": "Institution's type",
            "enum": ["GSP", "PA", "PSP", "PT", "SCP"]
          },
          "origin": {
            "type": "string",
            "description": "Institution data origin"
          },
          "originId": {
            "type": "string",
            "description": "Institution's details origin Id"
          },
          "taxCode": {
            "type": "string",
            "description": "Institution's taxCode"
          },
          "zipCode": {
            "type": "string",
            "description": "Institution's zipCode"
          }
        }
      },
      "InstitutionResource": {
        "title": "InstitutionResource",
        "required": [
          "address",
          "externalId",
          "fiscalCode",
          "id",
          "mailAddress",
          "name",
          "origin",
          "originId",
          "status",
          "userProductRoles"
        ],
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "Institution's physical address"
          },
          "assistanceContacts": {
            "description": "Institution's assistance contacts",
            "$ref": "#/components/schemas/AssistanceContactsResource"
          },
          "companyInformations": {
            "description": "GPS, SCP, PT optional data",
            "$ref": "#/components/schemas/CompanyInformationsResource"
          },
          "dpoData": {
            "description": "Data Protection Officer (DPO) specific data",
            "$ref": "#/components/schemas/DpoDataResource"
          },
          "externalId": {
            "type": "string",
            "description": "Institution's unique external identifier"
          },
          "fiscalCode": {
            "type": "string",
            "description": "Institution's taxCode"
          },
          "id": {
            "type": "string",
            "description": "Institution's unique internal identifier"
          },
          "institutionType": {
            "type": "string",
            "description": "Institution's type",
            "enum": ["GSP", "PA", "PSP", "PT", "SCP"]
          },
          "mailAddress": {
            "type": "string",
            "description": "Institution's digitalAddress"
          },
          "name": {
            "type": "string",
            "description": "Institution's name"
          },
          "origin": {
            "type": "string",
            "description": "Institution data origin"
          },
          "originId": {
            "type": "string",
            "description": "Institution's details origin Id"
          },
          "pspData": {
            "description": "Payment Service Provider (PSP) specific data",
            "$ref": "#/components/schemas/PspDataResource"
          },
          "recipientCode": {
            "type": "string",
            "description": "Billing recipient code"
          },
          "status": {
            "type": "string",
            "description": "Institution onboarding status"
          },
          "userProductRoles": {
            "type": "array",
            "description": "Logged user's roles on product",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "InvalidParam": {
        "title": "InvalidParam",
        "required": ["name", "reason"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Invalid parameter name."
          },
          "reason": {
            "type": "string",
            "description": "Invalid parameter reason."
          }
        }
      },
      "PageInfo": {
        "title": "PageInfo",
        "type": "object",
        "properties": {
          "items_found": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "total_pages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PaymentServiceProviderDetailsDto": {
        "title": "PaymentServiceProviderDetailsDto",
        "type": "object",
        "properties": {
          "abi": {
            "type": "string"
          },
          "agid_psp": {
            "type": "boolean"
          },
          "bic": {
            "type": "string"
          },
          "business_name": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "my_bank_code": {
            "type": "string"
          },
          "psp_code": {
            "type": "string"
          },
          "stamp": {
            "type": "boolean"
          },
          "tax_code": {
            "type": "string"
          },
          "transfer": {
            "type": "boolean"
          },
          "vat_number": {
            "type": "string"
          }
        }
      },
      "PaymentServiceProviderDetailsResource": {
        "title": "PaymentServiceProviderDetailsResource",
        "required": [
          "abi",
          "agid_psp",
          "bic",
          "my_bank_code",
          "stamp",
          "tax_code",
          "transfer",
          "vat_number"
        ],
        "type": "object",
        "properties": {
          "abi": {
            "type": "string",
            "description": "abi of the payment service provider"
          },
          "agid_psp": {
            "type": "boolean",
            "description": "agid code of the payment service provider",
            "example": false
          },
          "bic": {
            "type": "string",
            "description": "bic of the payment service provider"
          },
          "business_name": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "my_bank_code": {
            "type": "string",
            "description": "bank code of the payment service provider"
          },
          "psp_code": {
            "type": "string"
          },
          "stamp": {
            "type": "boolean",
            "description": "stamp of the payment service provider",
            "example": false
          },
          "tax_code": {
            "type": "string",
            "description": "tax code of the payment service provider"
          },
          "transfer": {
            "type": "boolean",
            "description": "transfer  of the payment service provider",
            "example": false
          },
          "vat_number": {
            "type": "string",
            "description": "of the payment service provider"
          }
        }
      },
      "PaymentServiceProviderResource": {
        "title": "PaymentServiceProviderResource",
        "type": "object",
        "properties": {
          "business_name": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "psp_code": {
            "type": "string"
          }
        }
      },
      "PaymentServiceProvidersResource": {
        "title": "PaymentServiceProvidersResource",
        "type": "object",
        "properties": {
          "page_info": {
            "$ref": "#/components/schemas/PageInfo"
          },
          "payment_service_providers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentServiceProviderResource"
            }
          }
        }
      },
      "PaymentTypeResource": {
        "title": "PaymentTypeResource",
        "required": ["description", "payment_type"],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of the payment type"
          },
          "payment_type": {
            "type": "string",
            "description": "Code of payment type"
          }
        }
      },
      "PaymentTypesResource": {
        "title": "PaymentTypesResource",
        "required": ["payment_types"],
        "type": "object",
        "properties": {
          "payment_types": {
            "type": "array",
            "description": "List of payment types",
            "items": {
              "$ref": "#/components/schemas/PaymentTypeResource"
            }
          }
        }
      },
      "Problem": {
        "title": "Problem",
        "required": ["status", "title"],
        "type": "object",
        "properties": {
          "detail": {
            "type": "string",
            "description": "Human-readable description of this specific problem."
          },
          "instance": {
            "type": "string",
            "description": "A URI that describes where the problem occurred."
          },
          "invalidParams": {
            "type": "array",
            "description": "A list of invalid parameters details.",
            "items": {
              "$ref": "#/components/schemas/InvalidParam"
            }
          },
          "status": {
            "type": "integer",
            "description": "The HTTP status code.",
            "format": "int32",
            "example": 500
          },
          "title": {
            "type": "string",
            "description": "Short human-readable summary of the problem."
          },
          "type": {
            "type": "string",
            "description": "A URL to a page with more details regarding the problem."
          }
        },
        "description": "A \"problem detail\" as a way to carry machine-readable details of errors (https://datatracker.ietf.org/doc/html/rfc7807)"
      },
      "ProductsResource": {
        "title": "ProductsResource",
        "required": ["description", "id", "title", "urlBO"],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Product's description"
          },
          "id": {
            "type": "string",
            "description": "Product's unique identifier"
          },
          "title": {
            "type": "string",
            "description": "Product's title"
          },
          "urlBO": {
            "type": "string",
            "description": "URL that redirects to the back-office section, where is possible to manage the product"
          },
          "urlPublic": {
            "type": "string",
            "description": "URL that redirects to the public information webpage of the product"
          }
        }
      },
      "PspChannelPaymentTypes": {
        "title": "PspChannelPaymentTypes",
        "type": "object",
        "properties": {
          "payment_types": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PspChannelPaymentTypesResource": {
        "title": "PspChannelPaymentTypesResource",
        "required": ["payment_types"],
        "type": "object",
        "properties": {
          "payment_types": {
            "type": "array",
            "description": "List of payment types",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PspChannelResource": {
        "title": "PspChannelResource",
        "required": ["channel_code", "enabled", "payment_types"],
        "type": "object",
        "properties": {
          "channel_code": {
            "type": "string",
            "description": "Channel's unique identifier"
          },
          "enabled": {
            "type": "boolean",
            "description": "Channel enabled",
            "example": false
          },
          "payment_types": {
            "type": "array",
            "description": "List of payment types",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PspChannelsResource": {
        "title": "PspChannelsResource",
        "required": ["channels"],
        "type": "object",
        "properties": {
          "channels": {
            "type": "array",
            "description": "Channel list",
            "items": {
              "$ref": "#/components/schemas/PspChannelResource"
            }
          }
        }
      },
      "PspDataResource": {
        "title": "PspDataResource",
        "required": [
          "abiCode",
          "businessRegisterNumber",
          "legalRegisterName",
          "legalRegisterNumber",
          "vatNumberGroup"
        ],
        "type": "object",
        "properties": {
          "abiCode": {
            "type": "string",
            "description": "PSP's ABI code"
          },
          "businessRegisterNumber": {
            "type": "string",
            "description": "PSP's Business Register number"
          },
          "legalRegisterName": {
            "type": "string",
            "description": "PSP's legal register name"
          },
          "legalRegisterNumber": {
            "type": "string",
            "description": "PSP's legal register number"
          },
          "vatNumberGroup": {
            "type": "boolean",
            "description": "PSP's Vat Number group",
            "example": false
          }
        }
      },
      "Resource": {
        "title": "Resource",
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "file": {
            "type": "string",
            "format": "binary"
          },
          "filename": {
            "type": "string"
          },
          "inputStream": {
            "$ref": "#/components/schemas/InputStream"
          },
          "open": {
            "type": "boolean"
          },
          "readable": {
            "type": "boolean"
          },
          "uri": {
            "type": "string",
            "format": "uri"
          },
          "url": {
            "type": "string",
            "format": "url"
          }
        }
      },
      "StationDetailResource": {
        "title": "StationDetailResource",
        "required": ["enabled", "stationCode", "stationStatus"],
        "type": "object",
        "properties": {
          "activationDate": {
            "type": "string",
            "description": "Station's activation date",
            "format": "date-time"
          },
          "associatedCreditorInstitutions": {
            "type": "integer",
            "description": "Number of station's creditor institutions",
            "format": "int32"
          },
          "brokerCode": {
            "type": "string",
            "description": "Station's broker code"
          },
          "brokerDescription": {
            "type": "string",
            "description": "Station broker's description"
          },
          "brokerObjId": {
            "type": "integer",
            "description": "Station's broker object id",
            "format": "int64"
          },
          "createdAt": {
            "type": "string",
            "description": "Station created on",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean",
            "description": "Station's activation state",
            "example": false
          },
          "flagOnline": {
            "type": "boolean",
            "description": "Station's online flag ",
            "example": false
          },
          "ip": {
            "type": "string",
            "description": "Station's ip address"
          },
          "ip4Mod": {
            "type": "string",
            "description": "Station's ip v4"
          },
          "modifiedAt": {
            "type": "string",
            "description": "Station's last modified date",
            "format": "date-time"
          },
          "newPassword": {
            "type": "string",
            "description": "Station's new password"
          },
          "operatedBy": {
            "type": "string",
            "description": "Station's operator"
          },
          "password": {
            "type": "string",
            "description": "Station's password"
          },
          "pofService": {
            "type": "string",
            "description": "Station's pof service"
          },
          "port": {
            "type": "integer",
            "description": "Station's port",
            "format": "int64"
          },
          "port4Mod": {
            "type": "integer",
            "description": "Station's v4 port",
            "format": "int64"
          },
          "primitiveVersion": {
            "type": "string",
            "description": "Station's primitive version"
          },
          "protocol": {
            "type": "string",
            "description": "Station's http protocol",
            "enum": ["HTTP", "HTTPS"]
          },
          "protocol4Mod": {
            "type": "string",
            "description": "Station's protocol v4",
            "enum": ["HTTP", "HTTPS"]
          },
          "proxyEnabled": {
            "type": "boolean",
            "description": "Station's proxy enabled variable",
            "example": false
          },
          "proxyHost": {
            "type": "string",
            "description": "Station's proxy host"
          },
          "proxyPassword": {
            "type": "string",
            "description": "Station's proxy password"
          },
          "proxyPort": {
            "type": "integer",
            "description": "Station's proxy port",
            "format": "int64"
          },
          "proxyUsername": {
            "type": "string",
            "description": "Station's proxy username"
          },
          "redirectIp": {
            "type": "string",
            "description": "Station's redirect Ip"
          },
          "redirectPath": {
            "type": "string",
            "description": "Station's redirect path"
          },
          "redirectPort": {
            "type": "integer",
            "description": "Station's redirect port",
            "format": "int64"
          },
          "redirectProtocol": {
            "type": "string",
            "description": "Station's redirect http protocol",
            "enum": ["HTTP", "HTTPS"]
          },
          "redirectQueryString": {
            "type": "string",
            "description": "Station's redirect query string"
          },
          "rtInstantaneousDispatch": {
            "type": "boolean",
            "description": "Station's instantaneous rt dispatch",
            "example": false
          },
          "service": {
            "type": "string",
            "description": "Station's service"
          },
          "service4Mod": {
            "type": "string",
            "description": "Station's service 4"
          },
          "stationCode": {
            "type": "string",
            "description": "Station's unique identifier"
          },
          "stationStatus": {
            "type": "string",
            "description": "Station's status",
            "enum": ["ACTIVE", "ON_REVISION", "TO_BE_CORRECTED"]
          },
          "targetHost": {
            "type": "string",
            "description": "Station's target host"
          },
          "targetPath": {
            "type": "string",
            "description": "Station's target path"
          },
          "targetPort": {
            "type": "integer",
            "description": "Station target's port",
            "format": "int64"
          },
          "threadNumber": {
            "type": "integer",
            "description": "Station's max thread number",
            "format": "int64"
          },
          "timeoutA": {
            "type": "integer",
            "description": "Station's timeoutA",
            "format": "int64"
          },
          "timeoutB": {
            "type": "integer",
            "description": "Station's timeoutB",
            "format": "int64"
          },
          "timeoutC": {
            "type": "integer",
            "description": "Station's timeoutC",
            "format": "int64"
          },
          "version": {
            "type": "integer",
            "description": "Station's version",
            "format": "int64"
          }
        }
      },
      "StationDetailsDto": {
        "title": "StationDetailsDto",
        "required": [
          "primitiveVersion",
          "redirectIp",
          "redirectPath",
          "redirectPort",
          "redirectProtocol",
          "redirectQueryString",
          "stationCode",
          "targetHost",
          "targetPath",
          "targetPort"
        ],
        "type": "object",
        "properties": {
          "brokerCode": {
            "type": "string",
            "description": "Station's broker code"
          },
          "brokerDescription": {
            "type": "string",
            "description": "Station broker's description"
          },
          "brokerObjId": {
            "type": "integer",
            "description": "Station's broker object id",
            "format": "int64"
          },
          "enabled": {
            "type": "boolean",
            "description": "Station's activation state",
            "example": false
          },
          "flagOnline": {
            "type": "boolean",
            "description": "Station's online flag ",
            "example": false
          },
          "ip": {
            "type": "string",
            "description": "Station's ip address"
          },
          "ip4Mod": {
            "type": "string",
            "description": "Station's ip v4"
          },
          "newPassword": {
            "type": "string",
            "description": "Station's new password"
          },
          "password": {
            "type": "string",
            "description": "Station's password"
          },
          "pofService": {
            "type": "string",
            "description": "Station's pof service"
          },
          "port": {
            "type": "integer",
            "description": "Station's port",
            "format": "int64"
          },
          "port4Mod": {
            "type": "integer",
            "description": "Station's v4 port",
            "format": "int64"
          },
          "primitiveVersion": {
            "type": "string",
            "description": "Station's primitive version"
          },
          "protocol": {
            "type": "string",
            "description": "Station's http protocol",
            "enum": ["HTTP", "HTTPS"]
          },
          "protocol4Mod": {
            "type": "string",
            "description": "Station's protocol v4",
            "enum": ["HTTP", "HTTPS"]
          },
          "proxyEnabled": {
            "type": "boolean",
            "description": "Station's proxy enabled variable",
            "example": false
          },
          "proxyHost": {
            "type": "string",
            "description": "Station's proxy host"
          },
          "proxyPassword": {
            "type": "string",
            "description": "Station's proxy password"
          },
          "proxyPort": {
            "type": "integer",
            "description": "Station's proxy port",
            "format": "int64"
          },
          "proxyUsername": {
            "type": "string",
            "description": "Station's proxy username"
          },
          "redirectIp": {
            "type": "string",
            "description": "Station's redirect Ip"
          },
          "redirectPath": {
            "type": "string",
            "description": "Station's redirect path"
          },
          "redirectPort": {
            "type": "integer",
            "description": "Station's redirect port",
            "format": "int64"
          },
          "redirectProtocol": {
            "type": "string",
            "description": "Station's redirect http protocol",
            "enum": ["HTTP", "HTTPS"]
          },
          "redirectQueryString": {
            "type": "string",
            "description": "Station's redirect query string"
          },
          "rtInstantaneousDispatch": {
            "type": "boolean",
            "description": "Station's instantaneous rt dispatch",
            "example": false
          },
          "service": {
            "type": "string",
            "description": "Station's service"
          },
          "service4Mod": {
            "type": "string",
            "description": "Station's service 4"
          },
          "stationCode": {
            "type": "string",
            "description": "Station's unique identifier"
          },
          "targetHost": {
            "type": "string",
            "description": "Station's target host"
          },
          "targetPath": {
            "type": "string",
            "description": "Station's target path"
          },
          "targetPort": {
            "type": "integer",
            "description": "Station target's port",
            "format": "int64"
          },
          "threadNumber": {
            "type": "integer",
            "description": "Station's max thread number",
            "format": "int64"
          },
          "timeoutA": {
            "type": "integer",
            "description": "Station's timeoutA",
            "format": "int64"
          },
          "timeoutB": {
            "type": "integer",
            "description": "Station's timeoutB",
            "format": "int64"
          },
          "timeoutC": {
            "type": "integer",
            "description": "Station's timeoutC",
            "format": "int64"
          }
        }
      },
      "StationResource": {
        "title": "StationResource",
        "required": ["enabled", "stationCode", "stationStatus"],
        "type": "object",
        "properties": {
          "activationDate": {
            "type": "string",
            "description": "Station's activation date",
            "format": "date-time"
          },
          "associatedCreditorInstitutions": {
            "type": "integer",
            "description": "Number of station's creditor institutions",
            "format": "int32"
          },
          "brokerDescription": {
            "type": "string",
            "description": "Station broker's description"
          },
          "createdAt": {
            "type": "string",
            "description": "Station created on",
            "format": "date-time"
          },
          "enabled": {
            "type": "boolean",
            "description": "Station's activation state",
            "example": false
          },
          "modifiedAt": {
            "type": "string",
            "description": "Station's last modified date",
            "format": "date-time"
          },
          "stationCode": {
            "type": "string",
            "description": "Station's unique identifier"
          },
          "stationStatus": {
            "type": "string",
            "description": "Station's status",
            "enum": ["ACTIVE", "ON_REVISION", "TO_BE_CORRECTED"]
          },
          "version": {
            "type": "integer",
            "description": "Station's version",
            "format": "int64"
          }
        }
      },
      "StationsResource": {
        "title": "StationsResource",
        "required": ["pageInfo", "stationsList"],
        "type": "object",
        "properties": {
          "pageInfo": {
            "description": "info pageable",
            "$ref": "#/components/schemas/PageInfo"
          },
          "stationsList": {
            "type": "array",
            "description": "List of ec stations",
            "items": {
              "$ref": "#/components/schemas/StationResource"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "description": "A bearer token in the format of a JWS and conformed to the specifications included in [RFC8725](https://tools.ietf.org/html/RFC8725)",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
